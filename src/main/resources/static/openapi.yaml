openapi: 3.0.0
info:
  title: Movie Manager
  description: A movie manager API.
  version: '1.0'
servers:
  - url: http://localhost:8080
    description: Local server

components:

  parameters:

    movieId:
      name: movieId
      in: path
      schema:
        type: string
      required: true
      description: The movie ID.

  schemas:

    MovieName:
      type: string
      example: The Conjuring
      minLength: 1
      maxLength: 100
      nullable: false
    MovieRelease:
      type: string
      format: date
      example: 2024-07-29
      nullable: false
    MovieLength:
      type: integer
      format: int32
      example: 112
      minimum: 1
      nullable: false
    MovieDescription:
      type: string
      example: Paranormal investigators Ed and Lorraine Warren work to help a family terrorized by a dark presence in their farmhouse.
      minLength: 1
      maxLength: 1000
      nullable: false

    Movie:
      type: object
      properties:
        movieId:
          type: string
          example: 872e1723-09ac-461d-9f54-d4c221269bed
        name:
          $ref: '#/components/schemas/MovieName'
        release:
          $ref: '#/components/schemas/MovieRelease'
        length:
          $ref: '#/components/schemas/MovieLength'
        description:
          $ref: '#/components/schemas/MovieDescription'
        director:
          $ref: '#/components/schemas/Director'
        actors:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'

    Director:
      type: object
      properties:
        name:
          type: string
          example: James Wan
          minLength: 1
          maxLength: 50
          nullable: false

    Actor:
      type: object
      properties:
        name:
          type: string
          example: Patrick Wilson
          minLength: 1
          maxLength: 50
          nullable: false

    Genre:
      type: object
      properties:
        name:
          type: string
          enum:
            - Action
            - Adventure
            - Animation
            - Biography
            - Comedy
            - Crime
            - Documentary
            - Drama
            - Family
            - Fantasy
            - Film-Noir
            - History
            - Horror
            - Music
            - Musical
            - Mystery
            - Romance
            - Sci-Fi
            - Sport
            - Superhero
            - Thriller
            - War
            - Western
          example: Horror
          nullable: false

    Country:
      type: object
      properties:
        name:
          type: string
          enum:
            - United States
            - Canada
            - United Kingdom
            - Australia
            - Germany
            - France
            - Italy
            - Spain
            - Japan
            - China
            - India
            - Brazil
            - Russia
            - Mexico
            - South Korea
            - South Africa
            - Netherlands
            - Sweden
            - Norway
            - Denmark
            - Finland
            - New Zealand
            - Argentina
            - Belgium
            - Switzerland
          example: Italy
          nullable: false

    AddMovieRequest:
      type: object
      required:
        - name
        - release
        - length
        - description
        - actors
        - genres
        - countries
      properties:
        name:
          $ref: '#/components/schemas/MovieName'
        release:
          $ref: '#/components/schemas/MovieRelease'
        length:
          $ref: '#/components/schemas/MovieLength'
        description:
          $ref: '#/components/schemas/MovieDescription'
        director:
          $ref: '#/components/schemas/Director'
        actors:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'

    UpdateMovieRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/MovieName'
        release:
          $ref: '#/components/schemas/MovieRelease'
        length:
          $ref: '#/components/schemas/MovieLength'
        description:
          $ref: '#/components/schemas/MovieDescription'
        actors:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'

paths:
  /movies:
    post:
      description: Add movie to the database.
      summary: Add movie
      operationId: addMovie
      tags:
        - movies
      requestBody:
        description: A movie to be added to the database.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMovieRequest'
      responses:
        '204':
          description: Successfully added movie to the database.

  /movies/{movieId}:
    get:
      description: Retrieve detailed information about a movie with a given ID.
      summary: Get movie details
      operationId: getMovie
      tags:
        - movies
      parameters:
        - $ref: '#/components/parameters/movieId'
      responses:
        '200':
          description: Successfully retrieved the movie details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
    put:
      description: Update details about a movie with a given ID.
      summary: Update movie details
      operationId: updateMovie
      tags:
        - movies
      parameters:
        - $ref: '#/components/parameters/movieId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMovieRequest'
      responses:
        '200':
          description: Successfully updated the movie details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
    delete:
      description: Delete a movie with a given ID.
      summary: Delete movie
      operationId: deleteMovie
      tags:
        - movies
      parameters:
        - $ref: '#/components/parameters/movieId'
      responses:
        '204':
          description: Successfully deleted the movie from the database.